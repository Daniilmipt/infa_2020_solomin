import pygame
from pygame.draw import *

pygame.init()

# цвета
color_ptig=(64, 27, 3) # цвет птицы
color_osn=(254, 214, 163) # цвет фона
color_1=(254, 214, 197) # увет средней полосы
color_pool=(178, 125, 135) # цвет тёмного пола
color_col=(252, 239, 27) # цвет солнца
color_gor1=(252, 153, 45) # цвет верхней горы (первой)
color_gor2=(173, 65, 49) # цвет нижней горы (второй)
color_gor3=(44, 7, 33) # цвет третьей горы (самой тёмной)

FPS = 30

'''
Что я изменил:
добавил отдельные переменные для цвета объектов
записал все команды поп построению гор в одну функцию (для первой, второй и третий  горы)
добавил смещение гор вдоль ох и оу
вначале программы рисовалась ненужная полоса внизу экрана(пол), потом она же ещё раз закрашивалась
указал на лишний for в функции рисования птицы
добавил параметр первой птицы(самой большой), по ней уже строятся остальные птицы
'''

def poloci(color,a,b,c,d):
    polygon(screen,color,[(a,b),(c+a,b),(c+a,b+d),(a,b+d)])


def bird(a, b, size): # project1
    '''
    функция рисования птицы
    a-координата центра птицы по ох
    b-кордината по оу
    size-размер птицы (её масштаб)
    второй цикл for является лишним, птица точно также рисуется первым
    
    механизм рисования: в кортеж элеметов q и w через for
    загоняются координаты точек составляющих кривую часть птицы
    кортеж q отвечает за правое крыло
    кортеж w отвечает за левое крыло
    xpr-координата точки правого крыла по ох, xlev-координата точки левого крыла по ох
    ypr-координата точки правого крыла по оу, ylev-координата точки левого крылп по оу
    '''
    q=[]
    w=[]
    for k in range(a, a+15*size, 1): # от а до a+15*size  шагом +1
        xpr=k
        xlev=2*a-k
        ypr=(0.15/size)*(k-a-10*size)**2+b-15*size
        ylev=(0.15/size)*(k-a-10*size)**2+b-15*size
        q.append((xpr,ypr)) # заносим в кортеж координаты правого крыла
        w.append((xlev,ylev)) # заносим в кортеж элементы левого крыла 
        
    # лишний for
    for k in range(a+1, a+15, -1):  
        q.append((k, (1/20/size)*(k-a-15*size)**2+b-11.25*size))
        w.append((2*a-k, (1/20/size)*(k-a-15*size)**2+b-11.25*size))
        
    polygon(screen, color_ptig, q) # по координатам кортежа рисует и закрашивает фигуру(правое крыло)
    polygon(screen, color_ptig, w) # по координатам кортежа рисует и закрашивает фигуру(левое крыло)


 # функция рисует первую гору
def gora1(x0,y0):
     # (первая гора) рисует все угловые части гор (неровные части) y0-смещение всех гор на некоторую величину вдоль оу, x0-вдоль ох
    polygon(screen, color_gor1, [(165+x0, 108+y0), (196+x0, 119+y0), (205+x0, 140+y0), (307+x0, 204+y0), (360+x0, 195+y0), (387+x0, 209+y0), (165+x0, 230+y0)])
    polygon(screen, color_gor1, [(387+x0, 209+y0), (429+x0, 165+y0), (463+x0, 182+y0), (480+x0, 161+y0), (480+x0, 200+y0)])
    polygon(screen, color_gor1, [(600+x0, 85+y0), (634+x0, 134+y0), (666+x0, 127+y0), (718+x0, 155+y0), (750+x0, 140+y0), (800+x0, 170+y0), (600+x0, 189+y0)])

     # рисует ПРАВУЮ кривую часть первой горы, y0-смещение горы на некоторую величину вдоль оу, x0-вдоль ох
    mountain_1 = [] # создает массив координат
    for i in range(480+x0, 550+x0, 1):
        mountain_1.append((i, (-25 / 2000) * (i - 480-x0) ** 2 + 161+y0)) # заполняет массив координат кривой
    for i in range(550+x0, 600+x0, 1):
        mountain_1.append((i, 0.029 * (i - 580-x0) ** 2 + 74+y0)) # заполняет массив координатами кривой
    # добавляет в массив 2 точки
    mountain_1.append((600+x0, 189+y0)) 
    mountain_1.append((480+x0, 200+y0))
    polygon(screen, color_gor1, mountain_1) # рисует по координатам массива ПРАВУЮ кривую первой горки

     # рисует ЛЕВУЮ кривую часть первой горы
    mountain_2 = [] # создает массив координат
    for i in range(0+x0, 165+x0, 1):
        mountain_2.append((i, (-109 / 21904) * (i - 17-x0) ** 2 + 217+y0)) # заполняет массив координат
     # добавляет в массив 2 точки
    mountain_2.append((165+x0, 230+y0))
    mountain_2.append((0+x0, 245+y0))
    polygon(screen, color_gor1, mountain_2) # рисует по координатам ЛЕВУЮ кривую часть первой горы


 # функция рисует вторую гору
def gora2(x01,y01):
     # рисует угловую часть второй горы, x01-смещение по ох второй горы y01 смещение по оу второй горы
    polygon(screen, color_gor2,
            [(800+x01, 190+y01), (800+x01, 340+y01), (655+x01, 344+y01), (655+x01, 284+y01), (688+x01, 240+y01), (720+x01, 263+y01), (740+x01, 235+y01), (770+x01, 240+y01)])
    polygon(screen, color_gor2,
            [(459+x01, 284+y01), (459+x01, 350+y01), (140+x01, 360+y01), (140+x01, 340+y01), (175+x01, 282+y01), (231+x01, 311+y01), (260+x01, 240+y01), (325+x01, 255+y01), (385+x01, 300+y01)])

     # рисуем круглую ЛЕВУЮ часть второй горы
    mountain_3 = []
    for i in range(25+x01, 155+x01, 1):
        mountain_3.append((i, (18 / 841) * (i-x01 - 73) ** 2 + 214+y01)) # заполняет массив координатами
     # обавляет две точки в массив
    mountain_3.append((140+x01, 360+y01))
    mountain_3.append((25+x01, 360+y01))
    polygon(screen, color_gor2, mountain_3) # рисует по координатам массива курглую ЛЕВУЮ часть горки

     # рисуем СРЕДНЮЮ часть второй горы
    mountain_4 = []
    for i in range(450+x01, 565+x01, 1):
        mountain_4.append((i, (1 / 125) * (i-x01 - 550) ** 2 + 220+y01-11)) # заполняем массив координатами
     # добавляем 2 точки в массив
    mountain_4.append((565+x01, 360+y01-11))
    mountain_4.append((450+x01, 360+y01-11))
    polygon(screen, color_gor2, mountain_4) # рисует по координатам массива СРЕНДЮЮ часть второй горы

     # рисуем ПРАВУЮ часть второй горы
    mountain_5 = []
    for i in range(565+x01, 655+x01, 1):
        mountain_5.append((i, (-59 / 7921) * (i-x01 - 655) ** 2 + 285+y01-14)) # заполняем массив координатами
     # добавляем 2 точки в массив 
    mountain_5.append((655+x01, 360+y01-14))
    mountain_5.append((565+x01, 360+y01-14))
    polygon(screen, (173, 65, 49), mountain_5) # рисует по координатам массива круглую ПРАВУЮ часть горки


 # функция рисования самой нижней горы, x03-смещение горы по горизонтале, y03-смещение горы по вертикале
def gora3(x03,y03):
     # рисует угловую часть горы
    polygon(screen, color_gor3, [(0+x03, 200+y03), (95+x03, 300+y03), (175+x03, 400+y03), (175+x03, 530+y03), (0+x03, 530+y03)])
    polygon(screen, color_gor3, [(315+x03, 525+y03), (380+x03, 528+y03), (510+x03, 450+y03), (545+x03, 470+y03), (545+x03, 530+y03), (315+x03, 530+y03)])
    
     # рисует левую кривую часть горы
    mountain_6 = []
    for i in range(175+x03, 315+x03, 1):
        mountain_6.append((i, (-5 / 784) * (i - 315-x03) ** 2 + 525+y03))
     # добавляем 2 точки в массив
    mountain_6.append((315+x03, 530+y03))
    mountain_6.append((175+x03, 530+y03))
    polygon(screen, color_gor3, mountain_6) # рисует по координатам массива ЛЕВУЮ часть горки
    
     # рисует правую кривую часть горы
    mountain_7 = []
    for i in range(545+x03, 800+x03, 1):
        mountain_7.append((i, (-9 / 3380) * (i-x03 - 700) ** 2 + 500+y03))
     # добавляем 2 точки в массив
    mountain_7.append((800+x03, 530+y03))
    mountain_7.append((545+x03, 530+y03))
    polygon(screen, color_gor3, mountain_7) # рисует по координатам массива ПРАВУЮ часть горки

'''
Эталоннные значения:
800
530
110
125
380
400
110
40
0
0
0
0
0
0
622
426
3
'''

 # Ввод данных
x=int(input()) # размер окна по горизонтале
y=int(input()) # размер окна по вертикале
y1=int(input()) # левый верхний угол серединной полосы по оу
y2=int(input()) # ширина серединной полосы
y3=int(input()) # левый верхний угол пола по оу
xcol=int(input()) # координата солнца по горизонтале
ycol=int(input()) # координата солнца по вертикале
rcol=int(input()) # радиус солнца
x0=int(input()) # смещение первой горки по горизонтале
y0=int(input()) # смещение первой горки по вертикале
x01=int(input()) # смещение второй горки по горизонтале
y01=int(input()) # смещение второй горки по вертикале
x03=int(input()) # смещение третий горки по горизонтале
y03=int(input()) # смещение третий горки по вертикале
a=int(input()) # центр птицы по горизонтале
b=int(input()) # центр птицы по вертикале
size=int(input()) # размер(масштаб) птицы

screen = pygame.display.set_mode((x,y)) # задаёт размер основной поверхности
#screen = pygame.display.set_mode((800, 530))


# рисуем полосы
poloci(color_osn,0,0,x,y) # рисуем основной фон, x-ширина экрана, y-высота экрана
poloci(color_1,0,y1,x,y2) # рисуем полосу в середине, y1-левый верхний угол по оу, y2-высота полосы


circle(screen, color_col, (xcol, ycol), rcol) # рисует солнце xcol-координата по ох центра солнца, ycol-координата по оу центра солнца, rcol-радиус солнца


gora1(0,0) # первая гора
gora2(0,0) # вторая гора
poloci(color_pool,0,y3,x,y-y3) # пол
gora3(0,0) # третья гора


 # рисование группы птиц функцией, xp-координата центра первой птицы по ох, yp-координата центра первой птицы по оу, size-размер первой птицы
 # рисует первую птицу по заданным координатам, а потом отстальных птиц в зависимости от положения и размера первой
bird(a, b, size)
bird(a-77, b-29, size-1)
bird(a+14, b-44, size-1)
bird(a-122, b-66, size-2)
bird(a-302, b-176, size-2)
bird(a-242, b-201, size-2)
bird(a-242, b-226, size-2)
bird(a-312, b-236, size-2)


pygame.display.update()
clock = pygame.time.Clock()
finished = False

while not finished:
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True

pygame.quit()
